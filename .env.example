# Django Core Settings
# Generate a secure secret key using:
# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-secret-key-here

# Debug mode - set to False in production
DEBUG=True

# Comma-separated list of allowed hosts
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Environment configuration
ENVIRONMENT=development

# Database Configuration
DATABASE_URL=postgres://username:password@db:5432/ecommerce_db

# Alternative database settings (if not using DATABASE_URL)
DB_ENGINE=django.db.backends.postgresql
DB_NAME=ecommerce_db
DB_USER=your-username
DB_PASSWORD=your-db-password
DB_HOST=db
DB_PORT=5432

# Redis Settings
REDIS_URL=redis://localhost:6379/0

# Session Settings
SESSION_ENGINE=django.contrib.sessions.backends.cache
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SESSION_EXPIRE_AT_BROWSER_CLOSE=False
SESSION_COOKIE_AGE=1209600  # 2 weeks in seconds
SECURE_SSL_REDIRECT=False    # Set to True in production with HTTPS

# Email Configuration
# For development
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# For production
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-specific-password
# DEFAULT_FROM_EMAIL=your-email@gmail.com
# SERVER_EMAIL=your-email@gmail.com

# Frontend & CORS
# Frontend URL (for CORS and email templates)
FRONTEND_URL=http://localhost:3000  # Your frontend URL

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
CORS_ALLOW_CREDENTIALS=True

# JWT Authentication
# JWT Secret Key (generate using: openssl rand -hex 32)
JWT_SECRET_KEY=your-jwt-secret-key-here

# JWT Expiration (in seconds)
JWT_ACCESS_TOKEN_LIFETIME=3600     # 1 hour
JWT_REFRESH_TOKEN_LIFETIME=604800  # 7 days

# Security
# Password validation
AUTH_PASSWORD_VALIDATORS=accounts.validators.CustomPasswordValidator

# Security Headers
SECURE_HSTS_SECONDS=31536000  # 1 year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# Logging & Monitoring
# Sentry DSN (for error tracking)
SENTRY_DSN=your-sentry-dsn-here

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Third-party Services (if applicable)
# Google OAuth2
# GOOGLE_OAUTH2_CLIENT_ID=your-google-client-id
# GOOGLE_OAUTH2_CLIENT_SECRET=your-google-client-secret

# AWS S3 Storage (for media files)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_STORAGE_BUCKET_NAME=your-bucket-name
# AWS_S3_REGION_NAME=your-region
# AWS_DEFAULT_ACL=public-read
# AWS_S3_CUSTOM_DOMAIN=your-cloudfront-distribution

# Application Specific
# Site Information
SITE_URL=http://localhost:8000
SITE_NAME="Your E-Commerce Site"
SITE_DOMAIN=localhost,yourdomain.com

# Admin URL (for security through obscurity)
ADMIN_URL=admin/

# Default time zone (Africa/Accra for Ghana)
TIME_ZONE=Africa/Accra

# Default language code
LANGUAGE_CODE=en-gh

# Development Settings
# Django Debug Toolbar
DEBUG_TOOLBAR_ENABLED=True

# Django Extensions
SHELL_PLUS_PRINT_SQL=True

# Testing
TEST_RUNNER=config.test_runner.PytestTestRunner

# Cache Configuration
CACHE_URL=redis://localhost:6379/1

# Celery Settings
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
CELERY_TASK_ALWAYS_EAGER=False

# Sample Data Auto Population Configuration

# Enable/disable automatic sample data population on runserver
# Set to 'false' to disable auto-population entirely
CREATE_SAMPLE_DATA=true

# Sample data scenario to use when auto-populating
# Options: basic, advanced, demo, performance
SAMPLE_DATA_SCENARIO=demo

# Auto-create admin user for sample data
# Username for the admin user created during sample data population
SAMPLE_DATA_ADMIN_USER=admin

# Sample data verbosity level (0=minimal, 1=normal, 2=verbose)
SAMPLE_DATA_VERBOSITY=1

# Force sample data recreation (clears existing data first)
# WARNING: This will delete all existing products and categories
FORCE_SAMPLE_DATA_RECREATION=false

# Sample Data Scenarios Explained:
# basic: 50 products with specifications (no images)
# advanced: 200 products with images and specifications
# demo: 100 products with featured items, images, and specs (recommended for demos)
# performance: 1000 products for performance testing (minimal data)
